<MudDataGrid T="StockPerformanceViewModel" 
             Items="@Stocks" 
             Hover="true" 
             Dense="true"
             Filterable="true"
             FilterMode="@DataGridFilterMode.ColumnFilterRow"
             Loading="@StocksLoading">
    <ToolBarContent>
        <MudText Typo="Typo.h6"
                 Class="d-flex justify-start">
            @Localizer["company_stocks_title"]
        </MudText>
        
        @if (ShowCreateStockButton)
        {
            <MudSpacer />
            
            <MudStack Justify="Justify.SpaceBetween" Row="true">
                <MudTooltip Text="@Localizer["company_stocks_create_stock_button_text"]"
                            Placement="@Placement.Bottom" Class="pr-3">
                    <MudIconButton Icon="@Icons.Material.Rounded.AddCircle"
                                   Size="@Size.Small"
                                   Variant="@Variant.Outlined"
                                   Color="@Color.Secondary"
                                   OnClick="@OnCreateStockClick" />
                </MudTooltip>
            </MudStack>
        }
    </ToolBarContent>
    <Columns>
        <TemplateColumn T="StockPerformanceViewModel" 
                        Title="@Localizer["stocks_grid_field_name"]" 
                        Sortable="true" 
                        SortBy="@(x => x.Title)"
                        Filterable="false">
            <CellTemplate>
                @if (DirectToStockPage)
                {
                    <MudLink Href="@($"/Stock/{context.Item.Id}")" Underline="Underline.Always">
                        @context.Item.Title
                    </MudLink>
                }
                else
                {
                    <MudText>
                        @context.Item.Title
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.Symbol"
                        Title="@Localizer["stocks_grid_field_symbol"]"
                        Sortable="true" 
                        Filterable="true">
            <FilterTemplate>
                <MudIconButton OnClick="@OpenStockSymbolFilter" 
                               Icon="@Icons.Material.Rounded.FilterAlt" 
                               Size="@Size.Small" />
                <MudOverlay Visible="@_symbolFilterOpened" 
                            OnClick="@(() => _symbolFilterOpened = false)" />
                <MudPopover Open="@_symbolFilterOpened" 
                            AnchorOrigin="Origin.BottomCenter" 
                            TransformOrigin="Origin.TopCenter"
                            Class="stocks-grid-symbol-filter-popover">
                    <MudStack Spacing="0">
                        <MudCheckBox T="bool" 
                                     Label="@Localizer["stocks_grid_field_symbol_filter_select_all"]" 
                                     Size="@Size.Small" 
                                     Value="@_symbolFilterSelectedAll" 
                                     ValueChanged="@SelectAllFilterStockSymbols" />
                        <MudStack Spacing="0" 
                                  Class="symbol-filter-list">
                            @foreach (var item in context.Items)
                            {
                                <MudCheckBox T="bool" 
                                             Label="@($"{item.Symbol}")" 
                                             Size="@Size.Small" 
                                             Value="@(SelectedStocks.Contains(item))"
                                             ValueChanged="@((value) => SelectedFilterStockSymbolChanged(value, item))" />
                            }
                        </MudStack>
                        <MudStack Row="true">
                            <MudButton OnClick="@(() => ClearStockSymbolFilter(context))">
                                @Localizer["stocks_grid_field_symbol_filter_clear"]
                            </MudButton>
                            <MudButton Color="@Color.Primary"
                                       OnClick="@(() => ApplyStockSymbolFilter(context))">
                                @Localizer["stocks_grid_field_symbol_filter_filter"]
                            </MudButton>
                        </MudStack>
                    </MudStack>
                </MudPopover>
            </FilterTemplate>
        </PropertyColumn>
        <TemplateColumn T="StockPerformanceViewModel"
                        Title="@Localizer["stocks_grid_field_price"]"
                        Filterable="false"
                        Sortable="true"
                        SortBy="@(x => x.Price)">
            <CellTemplate>
                @if (context.Item is { PreviousPrice: not null, HasIncreased: not null , PriceChange: not null})
                {
                    var color = context.Item.HasIncreased.Value 
                        ? Color.Success 
                        : Color.Error;
                    var icon = context.Item.HasIncreased.Value 
                        ? Icons.Material.Rounded.TrendingUp 
                        : Icons.Material.Rounded.TrendingDown;
                    <MudStack Row="true" AlignItems="@AlignItems.Center">
                        <MudText>@context.Item.Price.ToString("G29")</MudText>
                        <MudText Color="@color" Typo="@Typo.overline" Class="ml-1">
                            @context.Item.PriceChange.Value.ToString("G29")
                            <MudIcon Icon="@icon" Color="@color" Size="Size.Small" />
                        </MudText>
                    </MudStack>
                }
                else
                {
                    <MudText>@context.Item.Price</MudText>
                }
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.CreatedAt.ConvertUtcToLocal(TimeZoneHelper.UserTimeZone)" 
                        Title="@Localizer["stocks_grid_field_created_at"]" 
                        Sortable="true" 
                        Filterable="false"/>
        <PropertyColumn Property="x => x.UpdatedAt.ConvertUtcToLocal(TimeZoneHelper.UserTimeZone)" 
                        Title="@Localizer["stocks_grid_field_updated_at"]" 
                        Sortable="true" 
                        Filterable="false"/>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="StockPerformanceViewModel" />
    </PagerContent>
</MudDataGrid>